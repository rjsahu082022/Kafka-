// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Consume is an autogenerated mock type for the Consume type
type Consume struct {
	mock.Mock
}

// Consume provides a mock function with given fields: ctx, topics
func (_m *Consume) Consume(ctx context.Context, topics []string) error {
	ret := _m.Called(ctx, topics)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []string) error); ok {
		r0 = rf(ctx, topics)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewConsume interface {
	mock.TestingT
	Cleanup(func())
}

// NewConsume creates a new instance of Consume. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewConsume(t mockConstructorTestingTNewConsume) *Consume {
	mock := &Consume{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
